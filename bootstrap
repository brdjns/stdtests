#!/bin/sh

user_opts="$*"

verbose_mode=""
subdir_mode="--no-recursive"
install_mode=""
arg_install="--install "

# default is "none" to disable all warnings (with rare output)
default_warning_mode="none"
default_verbose_mode=""

# maintainer default is "all" to enable all warnings (with verbose output)
maintainer_warning_mode="all"
maintainer_verbose_mode="--verbose"

# verbose output, when the WARNINGS env variable is set
warnings_verbose_mode="--verbose"


# The directory for the autoconf files
TOOLSDIR=""

# ######################################
# autoconf supports env variable WARNING
# when not set, use our default

if [ -n "$WARNINGS" ]
then
echo "found WARNINGS: $WARNINGS"
verbose_mode="$warnings_verbose_mode"
fi

if [ -z "$WARNINGS" ]
then
WARNINGS="$default_warning_mode"
verbose_mode="$default_verbose_mode"
fi


# maintainer should see all warnings
# probably bail out with an error
#
if [ -n "$MAINTAINER_MODE" -o -n "$MAINTAINERMODE" ]
then
WARNINGS="$maintainer_warning_mode"
verbose_mode="$maintainer_verbose_mode"
echo "MAINTAINER_MODE activated: $MAINTAINER_MODE / $MAINTAINERMODE"
fi

export WARNINGS="$WARNINGS"


# #########################################
# Find the directory for the autoconf files
# That tr command should be: tr -d "([])"
# but round brackets fail on AIX

if [ -z "$TOOLSDIR" ]
then
    # AC_CONFIG_AUX_DIR has 17 characters
    TOOLSDIR="`grep "AC_CONFIG_AUX_DIR" configure.ac | cut -b 18- | tr -d "\050[]\051" `"
fi

if [ -z "$TOOLSDIR" ]
then
    # AC_CONFIG_MACRO_DIR has 19 characters
    TOOLSDIR="`grep "AC_CONFIG_MACRO_DIR" configure.ac | cut -b 20- | tr -d "\050[]\051" `"
fi

# when we found the dir name, create the dir, when needed
if [ -n "$TOOLSDIR" ]
then
    [ -d "$TOOLSDIR" ]  ||  mkdir  "$TOOLSDIR"
fi

# when no tools dir was set, use the project root dir
if [ -z "$TOOLSDIR" ]
then
    TOOLSDIR="."
fi


###########################################################
# When a needed file is missing, let "autoreconf" create it

if [ ! -e "$TOOLSDIR""/compile" ]
then
    install_mode="$arg_install"
fi
if [ ! -e "$TOOLSDIR""/defcomp" ]
then
    install_mode="$arg_install"
fi
if [ ! -e "$TOOLSDIR""/install-sh" ]
then
    install_mode="$arg_install"
fi
if [ ! -e "$TOOLSDIR""/missing" ]
then
    install_mode="$arg_install"
fi


# ####################################
# cleanup the m4 cache, when available
rm 2>/dev/null -rf autom4te.cache


# ################################
# autoreconf commandline parameter
# --install: install scripts in the project
# long:  --warnings=all
# short: -Wall

if [ -n "$DEBUG" ]
then
    echo "# using: "${AUTORECONF:-autoreconf} $install_mode  $verbose_mode  $subdir_mode  $user_opts
fi

exec ${AUTORECONF:-autoreconf}  $install_mode  $verbose_mode  $subdir_mode  $user_opts
